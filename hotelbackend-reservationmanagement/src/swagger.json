{
  "openapi": "3.0.1",
  "info": {
    "title": "hotelbackend-reservationmanagement-service API",
    "description": "Handles hotel reservation records including creation, management, lookup by reservation code, package/room/guest mapping, and reservation status changes.",
    "version": "1.0.0"
  },
  "servers": [],
  "paths": {
    "/v1/reservations": {
      "post": {
        "tags": [
          "reservation"
        ],
        "summary": "The createReservation API has 12 parameters.",
        "description": "createReservation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createReservation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createReservation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createReservation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **reservation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReservation-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReservation-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createReservation-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "reservations"
        ],
        "summary": "The listReservations API has no parameters.",
        "description": "listReservations",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listReservations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listReservations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listReservations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **reservations** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listReservations-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listReservations-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listReservations-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reservations/:reservationId": {
      "get": {
        "tags": [
          "reservation"
        ],
        "summary": "The getReservationById API has 1 parameter.",
        "description": "getReservationById",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getReservationById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getReservationById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getReservationById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **reservation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReservationById-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReservationById-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getReservationById-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "reservation"
        ],
        "summary": "The updateReservation API has 12 parameters.",
        "description": "updateReservation",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateReservation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateReservation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateReservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **reservation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateReservation-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateReservation-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateReservation-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reservation"
        ],
        "summary": "The deleteReservation API has 1 parameter.",
        "description": "deleteReservation",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteReservation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteReservation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteReservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **reservation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteReservation-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteReservation-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteReservation-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reservationbycode/:reservationId": {
      "get": {
        "tags": [
          "reservation"
        ],
        "summary": "The getReservationByCode API has 1 parameter.",
        "description": "getReservationByCode",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getReservationByCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getReservationByCode"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getReservationByCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **reservation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReservationByCode-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReservationByCode-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getReservationByCode-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cancelreservationbycode/:reservationId": {
      "patch": {
        "tags": [
          "reservation"
        ],
        "summary": "The cancelReservationByCode API has 12 parameters.",
        "description": "cancelReservationByCode",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cancelReservationByCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/cancelReservationByCode"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/cancelReservationByCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **reservation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelReservationByCode-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelReservationByCode-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelReservationByCode-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "errCode": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "createReservation": {
        "type": "object",
        "properties": {
          "reservationCode": {
            "type": "string",
            "nullable": false
          },
          "guestId": {
            "type": "string",
            "nullable": false
          },
          "roomId": {
            "type": "string",
            "nullable": false
          },
          "packageIds": {
            "type": "string",
            "nullable": true
          },
          "checkInDate": {
            "type": "string",
            "nullable": false
          },
          "checkOutDate": {
            "type": "string",
            "nullable": false
          },
          "status": {
            "type": "string",
            "nullable": false
          },
          "specialRequestIds": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "nullable": false
          },
          "totalAmount": {
            "type": "string",
            "nullable": false
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "numGuests": {
            "type": "string",
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "listReservations": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getReservationById": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateReservation": {
        "type": "object",
        "properties": {
          "guestId": {
            "type": "string",
            "nullable": true
          },
          "roomId": {
            "type": "string",
            "nullable": true
          },
          "packageIds": {
            "type": "string",
            "nullable": true
          },
          "checkInDate": {
            "type": "string",
            "nullable": true
          },
          "checkOutDate": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "specialRequestIds": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "numGuests": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteReservation": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getReservationByCode": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "cancelReservationByCode": {
        "type": "object",
        "properties": {
          "guestId": {
            "type": "string",
            "nullable": true
          },
          "roomId": {
            "type": "string",
            "nullable": true
          },
          "packageIds": {
            "type": "string",
            "nullable": true
          },
          "checkInDate": {
            "type": "string",
            "nullable": true
          },
          "checkOutDate": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "specialRequestIds": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "numGuests": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "createReservation-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "reservation": {
            "$ref": "#/components/schemas/reservation-object"
          }
        }
      },
      "listReservations-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/reservations-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getReservationById-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "reservation": {
            "$ref": "#/components/schemas/reservation-object"
          }
        }
      },
      "updateReservation-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "reservation": {
            "$ref": "#/components/schemas/reservation-object"
          }
        }
      },
      "deleteReservation-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "reservation": {
            "$ref": "#/components/schemas/reservation-object"
          }
        }
      },
      "getReservationByCode-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "reservation": {
            "$ref": "#/components/schemas/reservation-object"
          }
        }
      },
      "cancelReservationByCode-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "reservation": {
            "$ref": "#/components/schemas/reservation-object"
          }
        }
      },
      "reservation-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "_owner": {
            "type": "string"
          },
          "reservationCode": {
            "type": "string"
          },
          "guestId": {
            "type": "string"
          },
          "roomId": {
            "type": "string"
          },
          "packageIds": {
            "type": "string"
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "status_": {
            "type": "string"
          },
          "specialRequestIds": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          },
          "paymentStatus_": {
            "type": "string"
          },
          "totalAmount": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "numGuests": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "recordVersion": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "reservations-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "_owner": {
            "type": "string"
          },
          "reservationCode": {
            "type": "string"
          },
          "guestId": {
            "type": "string"
          },
          "roomId": {
            "type": "string"
          },
          "packageIds": {
            "type": "string"
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "status_": {
            "type": "string"
          },
          "specialRequestIds": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          },
          "paymentStatus_": {
            "type": "string"
          },
          "totalAmount": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "numGuests": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "recordVersion": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "paging-object": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "number"
          },
          "pageRowCount": {
            "type": "number"
          },
          "totalRowCount": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        }
      }
    }
  }
}
